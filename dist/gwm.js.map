{"version":3,"file":"gwm.js","sources":["../lib/helpers/dateConvert.js","../lib/watermark.js","../lib/core/canvas.js","../lib/helpers/bindCSS.js","../lib/core/element.js","../lib/core/svg.js","../lib/helpers/creator.js","../lib/index.js"],"sourcesContent":["const now = new Date()\nconst fullYear = now.getFullYear()\nconst month = now.getMonth() >= 9 ? now.getMonth() + 1 : `0${now.getMonth() + 1}`\nconst date = now.getDate() >= 10 ? now.getDate() : `0${now.getDate()}`\n\nexport default () => `${fullYear}${month}${date}`","import dateConvert from './helpers/dateConvert'\n\nexport default class Watermark {\n    constructor({\n                    txt = `${dateConvert()} 内部资料 请勿外传`,\n                    x = 0,\n                    y = 50,\n                    font = 'microsoft yahe',\n                    color = '#000',\n                    fontSize = 12,\n                    alpha = 0.1,\n                    width = 158,\n                    height = 100,\n                    angle = -15\n                }) {\n        this.txt = txt\n        this.width = width\n        this.height = height\n        this.x = x\n        this.y = y\n        this.font = font\n        this.fontSize = fontSize\n        this.color = color\n        this.alpha = alpha\n        this.angle = angle\n    }\n}","export default class CanvasWay {\n    constructor(watermark) {\n        this.watermark = watermark\n        const {width, height} = watermark\n        this.canvas = document.createElement('canvas');\n        this.canvas.setAttribute('width', width);\n        this.canvas.setAttribute('height', height);\n    }\n\n    render() {\n        const {txt, x, y, width, height, font, color, fontSize, alpha, angle} = this.watermark\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, width, height);\n        ctx.textBaseline = 'top';\n        ctx.textAlign = 'left'\n        ctx.fillStyle = color;\n        ctx.globalAlpha = alpha;\n        ctx.font = `${fontSize}px ${font}`\n        ctx.translate(x, y)\n        ctx.rotate(Math.PI / 180 * angle);\n        ctx.translate(-x, -y - fontSize)\n        ctx.fillText(txt, x, y + fontSize);\n        return this.canvas.toDataURL();\n    }\n}","function setStyle(elem, key, value) {\n    elem.style[key] = value\n}\n\nexport default (elem, css) => Object.keys(css).forEach(key => setStyle(elem, key, css[key]))","import bindCSS from '../helpers/bindCSS'\n\nexport default class ElementWay {\n    constructor(watermark) {\n        this.watermark = watermark\n    }\n\n    _createItem() {\n        let {txt, x, y, font, color, fontSize, alpha, angle, width, height} = this.watermark\n        const item = document.createElement('div');\n        bindCSS(item, {\n            position: 'relative',\n            width, height,\n            flex: `0 0 ${width}px`,\n            overflow: 'hidden',\n            pointerEvents: 'none'\n        })\n        let span = document.createElement('span');\n        span.innerHTML = txt\n        bindCSS(span, {\n            position: 'absolute',\n            top: `${y}px`,\n            left: `${x}px`,\n            fontFamily: font,\n            fontSize: `${fontSize}px`,\n            color: color,\n            lineHeight: 1.5,\n            opacity: alpha,\n            fontWeight: 400,\n            transform: `rotate(${angle}deg)`,\n            transformOrigin: '0 0',\n            userSelect: 'none',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden'\n        })\n        item.appendChild(span)\n        return item;\n    }\n\n    render() {\n        const {width, height} = this.watermark\n        const {clientWidth, clientHeight} = document.documentElement || document.body\n        const column = Math.ceil(clientWidth / width)\n        const rows = Math.ceil(clientHeight / height)\n        const wrap = document.createElement('div');\n        bindCSS(wrap, {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: `${width * column}px`,\n            height: `${height * rows}px`\n        })\n        for (let i = 0; i < column * rows; i++) {\n            wrap.appendChild(this._createItem());\n        }\n        return wrap;\n    }\n}","export default class SvgWay {\n    constructor(watermark) {\n        this.watermark = watermark\n    }\n\n    render() {\n        const {txt, x, y, width, height, color, font, fontSize, alpha, angle} = this.watermark\n        const svgStr =\n            `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}px\" height=\"${height}px\">\n                <text x=\"${x}px\" y=\"${y}px\" dy=\"${fontSize}px\"\n                    text-anchor=\"start\"\n                    stroke=\"${color}\"\n                    stroke-opacity=\"${alpha}\"\n                    fill=\"none\"\n                    transform=\"rotate(${angle},${x} ${y})\"\n                    font-weight=\"100\"\n                    font-size=\"${fontSize}\"\n                    font-family=\"${font}\"\n                    >\n                    ${txt}\n                </text>\n            </svg>`;\n        return `data:image/svg+xml;base64,${window.btoa(unescape(encodeURIComponent(svgStr)))}`;\n    }\n}","import bindCSS from './bindCSS'\n\nconst _id = `__gwm_${+new Date()}`\nconst MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n\nexport const observer = (target, callback) => {\n    if (!MutationObserver) return false\n    let bodyObserver = new MutationObserver(\n        mutationsList => mutationsList.forEach(mutation =>\n            mutation.removedNodes.forEach(_target => _target === target && callback())\n        )\n    )\n    bodyObserver.observe(document.body, {childList: true});\n    let observer = new MutationObserver(callback);\n    observer.observe(target, {characterData: true, attributes: true, childList: true, subtree: true});\n    return {bodyObserver, observer};\n}\n\nexport const disconnect = (observer) => observer.disconnect()\n\nexport default (gwm = {}) => {\n    const target = gwm.gwmDom ? gwm.gwmDom : document.getElementById(_id);\n    if (target) {\n        document.body.removeChild(target)\n    }\n    const gwmDiv = document.createElement('div');\n\n    bindCSS(gwmDiv, {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        zIndex: -100,\n        backgroundRepeat: 'no-repeat'\n    })\n    gwmDiv.id = _id\n    return gwmDiv\n}","import Watermark from './watermark'\nimport CanvasWay from './core/canvas'\nimport ElementWay from './core/element'\nimport SvgWay from './core/svg.js'\nimport creator, {observer, disconnect} from './helpers/creator'\n\nconst CANVAS = 'canvas'\nconst SVG = 'svg'\nconst ELEMENT = 'element'\n\nconst wayFactory = (mode, wm) => {\n    const way = [CANVAS, SVG, ELEMENT]\n    let impl = null\n    if (mode) {\n        mode = mode.toLowerCase()\n        mode = way.indexOf(mode) >= 0 ? mode : ''\n    }\n    if (!mode) {\n        mode = 'canvas'\n    }\n    switch (mode) {\n        case CANVAS:\n            impl = new CanvasWay(wm)\n            break\n        case SVG:\n            impl = new SvgWay(wm)\n            break\n        default:\n            impl = new ElementWay(wm)\n    }\n    return impl\n}\n\nclass GenerateWatermark {\n\n    creation(opts = {}) {\n        this.opts = opts\n        this.cancel()\n        const {mode, watch} = opts\n        this.gwmDom = creator(this)\n        const wm = new Watermark(opts)\n        const impl = wayFactory(mode, wm)\n        let result = impl.render()\n        if (mode === ELEMENT) {\n            this.gwmDom.appendChild(result)\n        } else {\n            this.gwmDom.style.background = `url(\"${result}\")`\n        }\n        const first = document.body.firstChild;\n        if (first) {\n            document.body.insertBefore(this.gwmDom, first);\n        } else {\n            document.body.appendChild(this.gwmDom)\n        }\n        if (watch !== false) {\n            this.observer = this.observing()\n        }\n    }\n\n    observing() {\n        observer(this.gwmDom, () => {\n            delete this.gwmDom\n            this.cancel()\n            this.creation(this.opts)\n        })\n    }\n\n    cancel() {\n        if (!this.observer) return\n        disconnect(this.observer.bodyObserver)\n        disconnect(this.observer.observer)\n        delete this.observer\n    }\n}\n\nwindow.gwm = new GenerateWatermark()\n"],"names":["now","Date","fullYear","getFullYear","month","getMonth","date","getDate","Watermark","txt","x","y","font","color","fontSize","alpha","width","height","angle","CanvasWay","watermark","canvas","document","createElement","setAttribute","this","ctx","getContext","clearRect","textBaseline","textAlign","fillStyle","globalAlpha","translate","rotate","Math","PI","fillText","toDataURL","elem","css","Object","keys","forEach","value","key","style","ElementWay","item","span","innerHTML","appendChild","documentElement","body","clientWidth","clientHeight","column","ceil","rows","wrap","i","_createItem","SvgWay","svgStr","window","btoa","unescape","encodeURIComponent","_id","MutationObserver","WebKitMutationObserver","MozMutationObserver","disconnect","observer","CANVAS","ELEMENT","GenerateWatermark","opts","cancel","mode","watch","gwmDom","gwm","target","getElementById","removeChild","gwmDiv","id","creator","result","wm","way","impl","toLowerCase","indexOf","wayFactory","render","background","first","firstChild","insertBefore","observing","callback","bodyObserver","mutationsList","mutation","removedNodes","_target","observe","childList","characterData","attributes","subtree","_this","creation"],"mappings":"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"}