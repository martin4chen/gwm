{"version":3,"file":"gwm.js","sources":["../lib/helpers/dateConvert.js","../lib/watermark.js","../lib/core/canvas.js","../lib/helpers/bindCSS.js","../lib/core/element.js","../lib/core/svg.js","../lib/helpers/creator.js","../lib/index.js"],"sourcesContent":["const now = new Date()\nconst fullYear = now.getFullYear()\nconst month = now.getMonth() >= 9 ? now.getMonth() + 1 : `0${now.getMonth() + 1}`\nconst date = now.getDate()\n\nexport default () => `${fullYear}${month}${date}`","import dateConvert from './helpers/dateConvert'\n\nexport default class Watermark {\n    constructor({\n                    txt = '',\n                    x = 0,\n                    y = 50,\n                    font = 'microsoft yahe',\n                    color = '#000',\n                    fontSize = 12,\n                    alpha = 0.1,\n                    width = 158,\n                    height = 100,\n                    angle = -15\n                }) {\n        this.txt = txt || `${dateConvert()} 内部资料 请勿外传`\n        this.width = width\n        this.height = height\n        this.x = x\n        this.y = y\n        this.font = font\n        this.fontSize = fontSize\n        this.color = color\n        this.alpha = alpha\n        this.angle = angle\n    }\n}","export default class CanvasWay {\n    constructor(watermark) {\n        this.watermark = watermark\n        const {width, height} = watermark\n        this.canvas = document.createElement('canvas');\n        this.canvas.setAttribute('width', width);\n        this.canvas.setAttribute('height', height);\n    }\n\n    render() {\n        const {txt, x, y, width, height, font, color, fontSize, alpha, angle} = this.watermark\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, width, height);\n        ctx.textBaseline = 'top';\n        ctx.textAlign = 'left'\n        ctx.fillStyle = color;\n        ctx.globalAlpha = alpha;\n        ctx.font = `${fontSize}px ${font}`\n        ctx.translate(x, y)\n        ctx.rotate(Math.PI / 180 * angle);\n        ctx.translate(-x, -y - fontSize)\n        ctx.fillText(txt, x, y + fontSize);\n        return this.canvas.toDataURL();\n    }\n}","function setStyle(elem, key, value) {\n    elem.style[key] = value\n}\n\nexport default (elem, css) => Object.keys(css).forEach(key => setStyle(elem, key, css[key]))","import bindCSS from '../helpers/bindCSS'\n\nexport default class ElementWay {\n    constructor(watermark) {\n        this.watermark = watermark\n    }\n\n    _createItem() {\n        let {txt, x, y, font, color, fontSize, alpha, angle, width, height} = this.watermark\n        const item = document.createElement('div');\n        bindCSS(item, {\n            position: 'relative',\n            width, height,\n            flex: `0 0 ${width}px`,\n            overflow: 'hidden',\n            pointerEvents: 'none'\n        })\n        let span = document.createElement('span');\n        span.innerHTML = txt\n        bindCSS(span, {\n            position: 'absolute',\n            top: `${y}px`,\n            left: `${x}px`,\n            fontFamily: font,\n            fontSize: `${fontSize}px`,\n            color: color,\n            lineHeight: 1.5,\n            opacity: alpha,\n            fontWeight: 400,\n            transform: `rotate(${angle}deg)`,\n            transformOrigin: '0 0',\n            userSelect: 'none',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden'\n        })\n        item.appendChild(span)\n        return item;\n    }\n\n    render() {\n        const {width, height} = this.watermark\n        const {clientWidth, clientHeight} = document.documentElement || document.body\n        const column = Math.ceil(clientWidth / width)\n        const rows = Math.ceil(clientHeight / height)\n        const wrap = document.createElement('div');\n        bindCSS(wrap, {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: `${width * column}px`,\n            height: `${height * rows}px`\n        })\n        for (let i = 0; i < column * rows; i++) {\n            wrap.appendChild(this._createItem());\n        }\n        return wrap;\n    }\n}","export default class SvgWay {\n    constructor(watermark) {\n        this.watermark = watermark\n    }\n\n    render() {\n        const {txt, x, y, width, height, color, font, fontSize, alpha, angle} = this.watermark\n        const svgStr =\n            `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}px\" height=\"${height}px\">\n                <text x=\"${x}px\" y=\"${y}px\" dy=\"${fontSize}px\"\n                    text-anchor=\"start\"\n                    stroke=\"${color}\"\n                    stroke-opacity=\"${alpha}\"\n                    fill=\"none\"\n                    transform=\"rotate(${angle},${x} ${y})\"\n                    font-weight=\"100\"\n                    font-size=\"${fontSize}\"\n                    font-family=\"${font}\"\n                    >\n                    ${txt}\n                </text>\n            </svg>`;\n        return `data:image/svg+xml;base64,${window.btoa(unescape(encodeURIComponent(svgStr)))}`;\n    }\n}","import bindCSS from './bindCSS'\n\nconst _id = `__gwm_${+new Date()}`\nconst MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n\nexport const observer = (callback) => {\n    if (!MutationObserver) return false\n    let bodyObserver = new MutationObserver(\n        mutationsList => mutationsList.forEach(mutation =>\n            mutation.removedNodes.forEach(\n                _target => _target.id === _id && callback()\n            )\n        )\n    )\n    bodyObserver.observe(document.body, {childList: true});\n    const target = document.getElementById(_id);\n    let observer = new MutationObserver(callback);\n    observer.observe(target, {characterData: true, attributes: true, childList: true, subtree: true});\n    return {bodyObserver, observer};\n}\n\nexport const disconnect = (observer) => observer.disconnect()\n\nexport default () => {\n    const target = document.getElementById(_id);\n    if (target) {\n        document.body.removeChild(target)\n    }\n    const gwmDiv = document.createElement('div');\n\n    bindCSS(gwmDiv, {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        zIndex: -100,\n        backgroundRepeat: 'no-repeat'\n    })\n    gwmDiv.id = _id\n    return gwmDiv\n}","import Watermark from './watermark'\nimport CanvasWay from './core/canvas'\nimport ElementWay from './core/element'\nimport SvgWay from './core/svg.js'\nimport creator, {observer, disconnect} from './helpers/creator'\n\nconst CANVAS = 'canvas'\nconst SVG = 'svg'\nconst ELEMENT = 'element'\n\nconst wayFactory = (mode, wm) => {\n    const way = [CANVAS, SVG, ELEMENT]\n    let impl = null\n    if (mode) {\n        mode = mode.toLowerCase()\n        mode = way.indexOf(mode) >= 0 ? mode : ''\n    }\n    if (!mode) {\n        mode = 'canvas'\n    }\n    switch (mode) {\n        case CANVAS:\n            impl = new CanvasWay(wm)\n            break\n        case SVG:\n            impl = new SvgWay(wm)\n            break\n        default:\n            impl = new ElementWay(wm)\n    }\n    return impl\n}\n\n(function () {\n    const gwm = {num: 1}\n\n    gwm.creation = (opts = {}) => {\n        gwm.opts = opts\n        let {mode, watch} = opts\n        const gwmDom = creator()\n        const wm = new Watermark(opts)\n        const impl = wayFactory(mode, wm)\n        let result = null\n        result = impl.render()\n        if (mode === ELEMENT) {\n            gwmDom.appendChild(result)\n        } else {\n            gwmDom.style.background = `url(\"${result}\")`\n        }\n        const first = document.body.firstChild;\n        if (first) {\n            document.body.insertBefore(gwmDom, first);\n        } else {\n            document.body.appendChild(gwmDom)\n        }\n        if (watch !== false) {\n            gwm.observer = gwm.observing()\n        }\n        return gwm\n    }\n\n    gwm.observing = () => observer(() => {\n        gwm.cancel()\n        gwm.creation(gwm.opts)\n    })\n\n    gwm.cancel = () => {\n        disconnect(gwm.observer.bodyObserver)\n        disconnect(gwm.observer.observer)\n        gwm.observer.bodyObserver = null\n        gwm.observer.observer = null\n    }\n\n    window.gwm = gwm\n})()"],"names":["now","Date","fullYear","getFullYear","month","getMonth","date","getDate","Watermark","txt","x","y","font","color","fontSize","alpha","width","height","angle","dateConvert","CanvasWay","watermark","canvas","document","createElement","setAttribute","this","ctx","getContext","clearRect","textBaseline","textAlign","fillStyle","globalAlpha","translate","rotate","Math","PI","fillText","toDataURL","setStyle","elem","key","value","style","css","Object","keys","forEach","ElementWay","item","span","innerHTML","appendChild","documentElement","body","clientWidth","clientHeight","column","ceil","rows","wrap","i","_createItem","SvgWay","svgStr","window","btoa","unescape","encodeURIComponent","_id","MutationObserver","WebKitMutationObserver","MozMutationObserver","observer","callback","bodyObserver","mutationsList","mutation","removedNodes","_target","id","observe","childList","target","getElementById","characterData","attributes","subtree","disconnect","removeChild","gwmDiv","CANVAS","SVG","ELEMENT","wayFactory","mode","wm","way","impl","toLowerCase","indexOf","gwm","num","result","opts","watch","gwmDom","creator","render","background","first","firstChild","insertBefore","observing","cancel","creation"],"mappings":"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"}